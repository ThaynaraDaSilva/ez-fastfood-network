name: "Terraform Pipeline"

on:
  push:
    branches:
      - main
      - feature/pipeline

env:
  TF_VAR_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
  TF_VAR_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  # Nomes dos arquivos de plano
  PLAN_VPC: "tfplan-vpc"
  PLAN_IGW: "tfplan-igw"
  PLAN_SG: "tfplan-sg"

jobs:
  # VPC Module
  vpc:
    name: "VPC Module"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Terraform Init (VPC)
        run: terraform init

      - name: Terraform Plan (VPC)
        run: terraform plan -target=module.vpc -out=${{ env.PLAN_VPC }}

      - name: Save Terraform Plan (VPC)
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.PLAN_VPC }}
          path: .
          
      - name: Terraform Apply (VPC)
        run: terraform apply -auto-approve ${{ env.PLAN_VPC }}

  # Internet Gateway Module
  internet-gateway:
    name: "Internet Gateway Module"
    needs: vpc
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Download Terraform Plan (VPC)
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.PLAN_VPC }}
          path: .

      - name: Terraform Init (IGW)
        run: terraform init

      - name: Terraform Plan (IGW)
        run: terraform plan -target=module.internet_gateway -out=${{ env.PLAN_IGW }}

      - name: Save Terraform Plan (IGW)
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.PLAN_IGW }}
          path: .
          
      - name: Terraform Apply (IGW)
        run: terraform apply -auto-approve ${{ env.PLAN_IGW }}

  # Security Group Module
  security-group:
    name: "Security Group Module"
    needs: vpc
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Download Terraform Plan (VPC)
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.PLAN_VPC }}
          path: .

      - name: Terraform Init (SG)
        run: terraform init

      - name: Terraform Plan (SG)
        run: terraform plan -target=module.security_group -out=${{ env.PLAN_SG }}

      - name: Save Terraform Plan (SG)
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.PLAN_SG }}
          path: .
          
      - name: Terraform Apply (SG)
        run: terraform apply -auto-approve ${{ env.PLAN_SG }}

  # Collect Outputs
  outputs:
    name: "Collect Outputs"
    needs: [vpc, internet-gateway, security-group]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Terraform Output
        run: terraform output

  # Cleanup on Failure
  cleanup:
    name: "Terraform Destroy on Failure"
    if: failure()  # Executa apenas se algum job falhar
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Download All Terraform Plans
        uses: actions/download-artifact@v3
        with:
          name: "*"
          path: .

      - name: Terraform Destroy Security Group
        run: terraform destroy -auto-approve -target=module.security_group

      - name: Terraform Destroy Internet Gateway
        run: terraform destroy -auto-approve -target=module.internet_gateway

      - name: Terraform Destroy VPC
        run: terraform destroy -auto-approve