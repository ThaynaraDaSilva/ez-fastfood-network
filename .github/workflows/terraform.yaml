name: "Terraform Pipeline"

on:
  push:
    branches:
      - main
      - feature/pipeline

env:
  TF_VAR_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
  TF_VAR_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  # Nomes dos arquivos de plano
  PLAN_VPC: "tfplan-vpc"
  PLAN_IGW: "tfplan-igw"
  PLAN_SG: "tfplan-sg"

jobs:
  # 1. Initialize Terraform (Global)
  initialize:
    name: "Initialize Terraform"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.6.0"

      - name: Terraform Init (Global)
        run: terraform init

  # 2. VPC Module
  vpc:
    name: "VPC Module"
    needs: initialize  # Dependência do job de inicialização
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Terraform Plan (VPC)
        run: terraform plan -target=module.vpc -out=${{ env.PLAN_VPC }}

      - name: Terraform Apply (VPC)
        run: terraform apply -auto-approve ${{ env.PLAN_VPC }}

  # 3. Internet Gateway Module
  internet-gateway:
    name: "Internet Gateway Module"
    needs: vpc
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Terraform Plan (IGW)
        run: terraform plan -target=module.internet_gateway -out=${{ env.PLAN_IGW }}

      - name: Terraform Apply (IGW)
        run: terraform apply -auto-approve ${{ env.PLAN_IGW }}

  # 4. Security Group Module
  security-group:
    name: "Security Group Module"
    needs: vpc
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Terraform Plan (SG)
        run: terraform plan -target=module.security_group -out=${{ env.PLAN_SG }}

      - name: Terraform Apply (SG)
        run: terraform apply -auto-approve ${{ env.PLAN_SG }}

  # 5. Final Outputs
  outputs:
    name: "Collect Outputs"
    needs: [vpc, internet-gateway, security-group]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Terraform Output
        run: terraform output

  # 6. Cleanup Job in case of failure
  cleanup:
    name: "Terraform Destroy on Failure"
    if: failure()  # Executa apenas se algum job falhar
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Terraform Destroy All
        run: terraform destroy -auto-approve